/*
Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.

We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.

You must solve this problem without using the library's sort function.

 

Example 1:

Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]

22.10min
*/



class Solution {
    public void swap(int[] arr, int i, int j) {
        int temp = arr[i]; arr[i] = arr[j]; arr[j] = temp;
    }

    public void sortColors(int[] nums) {
        int e = nums.length-1;
        int s = 0;
        int m = 0;

        while(m <= e) {
            if(nums[m] == 0) {
                swap(nums, s, m);
                s++; m++;
            } else if(nums[m] == 1) {
                m++;
            } else {
                swap(nums, e, m);
                m++; e--;
            }
        }
    }
}
